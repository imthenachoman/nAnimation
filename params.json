{"name":"nAnimation","tagline":"a generic javascript animation library","body":"# nAnimation\r\ngeneric javascript animation library\r\n\r\n## Table of Contents\r\n\r\n 1. [Overview](#overview)\r\n 2. [Credits](#credits)\r\n 3. [How To Use](#how-to-use)\r\n\t 1. [To Start An Animation](#to-start-an-animation)\r\n\t 2. [To End An Animation](#to-end-an-animation)\r\n\t 3. [To Get An Array Of The Available Easing Functions](#to-get-an-array-of-the-available-easing-functions)\r\n 4. [Example](#example)\r\n\r\n## Overview\r\n\r\nThere are a lot of great JavaScript animation libraries but all of them were either too complex or bulky for my needs. They all offered a host/slew of features that I didn't need. So I set out to write something simpler for myself. I ended up with `nAnimation`.\r\n\r\n`nAnimation` doesn't really do any kind of animation; it lets you run a **function** an **X** # of times for a **Y** duration using an **optional easing function**. The function is called on each frame and can do whatever you need/want. At each frame/call the function is passed one paramater: a `rate`. The `rate` is a number between `0` and `1` and represents the `% complete` for each frame/call. (However, it is possible that some of the easing functions will result in a number larger then 1 during the duration.) The rate will always be `0` at the first frame/call and 1 at the last frame/call.\r\n\r\nYou can, in turn, use `rate` to do anything, including animations. For example, if the function sets the `width` of an element to be `rate * width` then the element will grow from `0` to `width` over the duration.\r\n\r\n## Credits\r\n\r\nI didn't really actually create anything special; I was able to piece together different things I found online to do what I need. The resources I used:\r\n\r\n 1. `requestAnimationFrame` from https://gist.github.com/paulirish/1579671\r\n 2. a cool animation wrapper by Dmitri Lau (http://www.sitepoint.com/simple-animations-using-requestanimationframe/)\r\n 3. `jQuery`'s easing functions from https://github.com/danro/jquery-easing/blob/master/jquery.easing.js\r\n 4. Robert Penners easing equations from http://robertpenner.com/easing/\r\n\r\n## How To Use\r\n\r\n### To Start An Animation\r\n\r\n    nAnimate.start([duration in milliseconds], [function to call with the % complete], [(optional) name of the easing function to use]);\r\n\r\nFor example:\r\n\r\n    nAnimate.start(1000, function(rate)\r\n    {\r\n        // grow the div width from 100 to 300\r\n        element.style.width = 100 + (rate * 200) + \"px\";\r\n    });\r\n    \r\n    nAnimate.start(2000, function(rate)\r\n    {\r\n        element.style.height = 100 + (rate * 200) + \"px\";\r\n    }, \"easeInQuart\");\r\n  \r\n### To End An Animation\r\n\r\n`nAnimate.start` will return an `ID`. Use the `ID` to cancel.\r\n\r\n    nAnimate.stop([ID]);\r\n\r\nFor example:\r\n\r\n    var ID = nAnimate.start(1000, function(rate)\r\n    {\r\n        element.style.width = 100 + (rate * 200) + \"px\";\r\n    });\r\n    \r\n    nAnimate.stop(ID);\r\n  \r\n### To Get An Array Of The Available Easing Functions\r\n\r\n    nAnimate.easingFunctions();\r\n\r\nFor example:\r\n\r\n    var easingFunctions = nAnimate.easingFunctions();\r\n\r\n## Example\r\n\r\nCheck http://jsfiddle.net/imthenachoman/q1tdx8s4/ or the `example.html` file for an example and to see how each easing function looks.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}